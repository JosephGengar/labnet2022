{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { map, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"src/app/services/apishippers.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\n\nfunction DialogShipperComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \"You must provide a \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"Company Name\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction DialogShipperComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \"Only \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \" 25 Characthers maximum\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction DialogShipperComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"strong\");\n    i0.ɵɵtext(2, \"Change Name\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction DialogShipperComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \"You must provide a \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"Phone Number\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction DialogShipperComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \"Only \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \" 25 Characthers maximum\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport class DialogShipperComponent {\n  constructor(dialogREF, apiShipper, snackBar, fb, shipperD) {\n    this.dialogREF = dialogREF;\n    this.apiShipper = apiShipper;\n    this.snackBar = snackBar;\n    this.fb = fb;\n    this.shipperD = shipperD;\n    this.frm = this.fb.group({\n      company: ['', [Validators.required, Validators.maxLength(25)], [nameCheck(this.apiShipper)]],\n      phone: ['', [Validators.required, Validators.maxLength(25)]]\n    });\n\n    if (this.shipperD != null) {\n      const companyD = this.frm.get('company');\n      companyD?.setValue(this.shipperD.CompanyName);\n      const phoneD = this.frm.get('phone');\n      phoneD?.setValue(this.shipperD.PhoneNumber);\n    }\n  }\n\n  ngOnInit() {\n    if (this.shipperD != null) {\n      const companyEd = this.frm.get('company'); //companyEd?.removeValidators(xxxxx); agregar validation async a borrar, y fijarte si usar constante afuera para ambas\n    }\n  }\n\n  close() {\n    this.dialogREF.close();\n  }\n\n  clean() {\n    const companyDom = this.frm.get('company');\n    const phoneDom = this.frm.get('phone');\n\n    if (companyDom || phoneDom) {\n      companyDom?.setValue('');\n      phoneDom?.setValue('');\n    }\n  }\n\n  addShipper() {\n    const shipper = {\n      CompanyName: this.frm.get('company')?.value,\n      PhoneNumber: this.frm.get('phone')?.value,\n      ShipperID: 0\n    };\n    this.apiShipper.InsertUpdateShipper(shipper).subscribe(response => {\n      if (response.sucess == 1) {\n        this.close();\n        this.snackBar.open(response.message, '', {\n          duration: 2000\n        });\n      } else {\n        alert(\"Error!!! while adding the Shipper\");\n      }\n    });\n  }\n\n  editShipper() {\n    const shipper = {\n      CompanyName: this.frm.get('company')?.value,\n      PhoneNumber: this.frm.get('phone')?.value,\n      ShipperID: this.shipperD.ShipperID\n    };\n    this.apiShipper.InsertUpdateShipper(shipper).subscribe(Response => {\n      if (Response.sucess == 1) {\n        this.close();\n        this.snackBar.open(Response.message, '', {\n          duration: 3500\n        });\n      } else {\n        alert(\"Error!!! while updating the Shipper\");\n      }\n    });\n  }\n\n}\n\nDialogShipperComponent.ɵfac = function DialogShipperComponent_Factory(t) {\n  return new (t || DialogShipperComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.ApishippersService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n};\n\nDialogShipperComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DialogShipperComponent,\n  selectors: [[\"app-dialogShipper\"]],\n  decls: 25,\n  vars: 8,\n  consts: [[1, \"container\"], [\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [\"novalidate\", \"\", 3, \"formGroup\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"company\"], [\"class\", \"sideUp\", 4, \"ngIf\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"phone\"], [\"mat-dialog-actions\", \"\", 2, \"justify-content\", \"center\", \"margin-bottom\", \"30px\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"type\", \"button\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"type\", \"button\", 3, \"click\"], [1, \"sideUp\"]],\n  template: function DialogShipperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3)(5, \"mat-form-field\")(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Company Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, DialogShipperComponent_div_9_Template, 4, 0, \"div\", 5);\n      i0.ɵɵtemplate(10, DialogShipperComponent_div_10_Template, 4, 0, \"div\", 5);\n      i0.ɵɵtemplate(11, DialogShipperComponent_div_11_Template, 3, 0, \"div\", 5);\n      i0.ɵɵelementStart(12, \"mat-form-field\")(13, \"mat-label\");\n      i0.ɵɵtext(14, \"Phone Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, DialogShipperComponent_div_16_Template, 4, 0, \"div\", 5);\n      i0.ɵɵtemplate(17, DialogShipperComponent_div_17_Template, 4, 0, \"div\", 5);\n      i0.ɵɵelementStart(18, \"div\", 7)(19, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function DialogShipperComponent_Template_button_click_19_listener() {\n        return ctx.shipperD !== null ? ctx.editShipper() : ctx.addShipper();\n      });\n      i0.ɵɵtext(20, \" Save \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function DialogShipperComponent_Template_button_click_21_listener() {\n        return ctx.close();\n      });\n      i0.ɵɵtext(22, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function DialogShipperComponent_Template_button_click_23_listener() {\n        return ctx.clean();\n      });\n      i0.ɵɵtext(24, \"Clean Up\");\n      i0.ɵɵelementEnd()()()()();\n    }\n\n    if (rf & 2) {\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      let tmp_6_0;\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.shipperD != null ? \"Edit Shipper\" : \"New Shipper\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.frm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.frm.get(\"company\")) == null ? null : tmp_2_0.hasError(\"required\")) && (((tmp_2_0 = ctx.frm.get(\"company\")) == null ? null : tmp_2_0.dirty) || ((tmp_2_0 = ctx.frm.get(\"company\")) == null ? null : tmp_2_0.touched)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.frm.get(\"company\")) == null ? null : tmp_3_0.hasError(\"maxlength\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.frm.get(\"company\")) == null ? null : tmp_4_0.hasError(\"companyExists\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.frm.get(\"phone\")) == null ? null : tmp_5_0.hasError(\"required\")) && ((tmp_5_0 = ctx.frm.get(\"phone\")) == null ? null : tmp_5_0.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx.frm.get(\"phone\")) == null ? null : tmp_6_0.hasError(\"maxlength\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.frm.invalid);\n    }\n  },\n  dependencies: [i5.NgIf, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i6.MatButton, i7.MatFormField, i7.MatLabel, i8.MatInput, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\".sideUp[_ngcontent-%COMP%] {\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n  color: red;\\n}\\n\\nmat-form-field[_ngcontent-%COMP%] {\\n  width: 60%;\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  justify-content: center;\\n  margin-top: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpYWxvZ1NoaXBwZXIuY29tcG9uZW50LnNjc3MiLCIuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxKb3MlQzMlQTlcXERlc2t0b3BcXFRleHRvc0NvZGlnb1xcQW5ndWxhclRQZlxcYXBwXFxzcmNcXGFwcFxcc2hpcHBlcnNcXGRpYWxvZ1xcZGlhbG9nU2hpcHBlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7RUFDQSxrQkFBQTtFQUNBLFVBQUE7QUNDSjs7QURFQTtFQUNJLFVBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0FDQ0o7O0FEQ0E7RUFDSSxrQkFBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7QUNFSiIsImZpbGUiOiJkaWFsb2dTaGlwcGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGVVcHtcclxuICAgIG1hcmdpbi10b3A6IDVweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbm1hdC1mb3JtLWZpZWxke1xyXG4gICAgd2lkdGg6IDYwJTtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcbi5jb250YWluZXJ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbn0iLCIuc2lkZVVwIHtcbiAgbWFyZ2luLXRvcDogNXB4O1xuICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gIGNvbG9yOiByZWQ7XG59XG5cbm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDYwJTtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuLmNvbnRhaW5lciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59Il19 */\"]\n});\nexport function nameCheck(apiShipper) {\n  return control => {\n    const shipper = {\n      CompanyName: control.value,\n      PhoneNumber: \"\",\n      ShipperID: 0\n    };\n    return apiShipper.validationName(shipper).pipe(tap(a => {\n      console.log(a);\n    }), map(res => {\n      if (res == true) {\n        companyExists: true;\n      } else {\n        companyExist: null;\n      }\n    }));\n  };\n}","map":{"version":3,"mappings":"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","names":["Validators","MAT_DIALOG_DATA","map","tap","i0","DialogShipperComponent","constructor","dialogREF","apiShipper","snackBar","fb","shipperD","group","company","required","maxLength","nameCheck","phone","companyD","frm","get","setValue","CompanyName","phoneD","PhoneNumber","ngOnInit","companyEd","close","clean","companyDom","phoneDom","addShipper","shipper","value","ShipperID","InsertUpdateShipper","subscribe","response","sucess","open","message","duration","alert","editShipper","Response","selectors","decls","vars","consts","template","ctx","control","validationName","pipe","a","console","log","res","companyExists","companyExist"],"sourceRoot":"","sources":["C:\\Users\\José\\Desktop\\TextosCodigo\\AngularTPf\\app\\src\\app\\shippers\\dialog\\dialogShipper.component.ts","C:\\Users\\José\\Desktop\\TextosCodigo\\AngularTPf\\app\\src\\app\\shippers\\dialog\\dialogShipper.component.html"],"sourcesContent":["import { validateHorizontalPosition } from '@angular/cdk/overlay';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { AbstractControl, AsyncValidatorFn, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { Shipper } from 'src/app/models/shipperView';\r\nimport { ApishippersService } from 'src/app/services/apishippers.service';\r\n\r\n@Component({\r\n  selector: 'app-dialogShipper',\r\n  templateUrl: './dialogShipper.component.html',\r\n  styleUrls: ['./dialogShipper.component.scss']\r\n})\r\nexport class DialogShipperComponent implements OnInit {\r\n  frm: FormGroup = this.fb.group({\r\n    company: ['', [Validators.required, Validators.maxLength(25)], [nameCheck(this.apiShipper)]],\r\n    phone: ['', [Validators.required, Validators.maxLength(25)]],\r\n  })\r\n\r\n  constructor(public dialogREF : MatDialogRef<DialogShipperComponent>,\r\n              public apiShipper: ApishippersService,\r\n              private snackBar : MatSnackBar,\r\n              private readonly fb : FormBuilder,\r\n              @Inject(MAT_DIALOG_DATA) public shipperD : Shipper) { \r\n                if(this.shipperD != null){\r\n                  const companyD = this.frm.get('company');\r\n                  companyD?.setValue(this.shipperD.CompanyName);\r\n                  const phoneD = this.frm.get('phone');\r\n                  phoneD?.setValue(this.shipperD.PhoneNumber)                 \r\n                }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(this.shipperD != null){\r\n      const companyEd = this.frm.get('company');\r\n      //companyEd?.removeValidators(xxxxx); agregar validation async a borrar, y fijarte si usar constante afuera para ambas\r\n    }\r\n  }\r\n  close(){\r\n    this.dialogREF.close();\r\n  }\r\n  clean(){\r\n    const companyDom = this.frm.get('company');\r\n    const phoneDom = this.frm.get('phone');\r\n    if(companyDom || phoneDom){\r\n        companyDom?.setValue('');\r\n        phoneDom?.setValue('');\r\n      }\r\n\r\n\r\n  }\r\n  addShipper(){\r\n    const shipper : Shipper = {CompanyName: this.frm.get('company')?.value, PhoneNumber: this.frm.get('phone')?.value, ShipperID: 0 };\r\n    this.apiShipper.InsertUpdateShipper(shipper).subscribe(response => {\r\n      if(response.sucess == 1){\r\n        this.close();\r\n        this.snackBar.open(response.message, '', {duration:2000});\r\n      }\r\n      else{\r\n        alert(\"Error!!! while adding the Shipper\");\r\n      }\r\n    })\r\n  }\r\n  editShipper(){\r\n    const shipper : Shipper = {CompanyName: this.frm.get('company')?.value, PhoneNumber: this.frm.get('phone')?.value, ShipperID: this.shipperD.ShipperID};\r\n    this.apiShipper.InsertUpdateShipper(shipper).subscribe(Response => {\r\n      if(Response.sucess == 1){\r\n        this.close();\r\n        this.snackBar.open(Response.message, '', {duration:3500});\r\n      }\r\n      else{\r\n        alert(\"Error!!! while updating the Shipper\")\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n}\r\nexport function nameCheck(apiShipper: any): AsyncValidatorFn {\r\n  return (control : AbstractControl) => {\r\n  const shipper : Shipper = {CompanyName: control.value, PhoneNumber: \"\", ShipperID: 0};\r\n  return apiShipper.validationName(shipper)\r\n  .pipe(\r\n    tap((a) => {\r\n      console.log(a)\r\n    }),\r\n    map(res => {\r\n      if(res == true){\r\n        companyExists: true;\r\n      }\r\n      else{\r\n        companyExist: null;\r\n      }\r\n    })\r\n  )\r\n};\r\n}\r\n\r\n//({result}) => (result==true) ? {companyExists: true} : null","<div class=\"container\">\r\n         \r\n        <h1 mat-dialog-title>{{shipperD!=null ? 'Edit Shipper' : 'New Shipper'}}</h1>\r\n        <div mat-dialog-content >\r\n            <form [formGroup]=\"frm\" novalidate>\r\n            <mat-form-field>\r\n                <mat-label>Company Name</mat-label>\r\n                <input type=\"text\" matInput formControlName = \"company\" >                                                \r\n            </mat-form-field>\r\n            <div *ngIf=\"frm.get('company')?.hasError('required') && (frm.get('company')?.dirty || frm.get('company')?.touched)\" class=\"sideUp\">You must provide a <strong>Company Name</strong></div> \r\n            <div *ngIf=\"frm.get('company')?.hasError('maxlength')\" class=\"sideUp\">Only <strong> 25 Characthers maximum</strong></div> \r\n            <div *ngIf=\"frm.get('company')?.hasError('companyExists')\" class=\"sideUp\"><strong>Change Name</strong></div> \r\n\r\n            <mat-form-field>\r\n                <mat-label>Phone Number</mat-label>\r\n                <input type=\"text\" matInput formControlName = \"phone\">               \r\n            </mat-form-field>\r\n            <div *ngIf=\"frm.get('phone')?.hasError('required') && frm.get('phone')?.dirty\" class=\"sideUp\">You must provide a <strong>Phone Number</strong></div> \r\n            <div *ngIf=\"frm.get('phone')?.hasError('maxlength')\" class=\"sideUp\">Only <strong> 25 Characthers maximum</strong></div> \r\n\r\n            <div mat-dialog-actions style=\"justify-content: center;margin-bottom: 30px;\">\r\n                <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"this.frm.invalid\" (click)=\"shipperD !== null ? editShipper() : addShipper()\"> Save </button>\r\n                <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"close()\">Close</button>\r\n                <button mat-raised-button color=\"accent\" type=\"button\" (click)=\"clean()\">Clean Up</button>\r\n            </div>       \r\n        </form>\r\n        </div>      \r\n    \r\n</div>\r\n"]},"metadata":{},"sourceType":"module"}